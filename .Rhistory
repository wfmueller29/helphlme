install.packages("roxygen2")
getwd()
library(devtools)
library(roxygen2)
document()
library(devtools)
library(roxygen2)
document()
install.packages("Rcpp")
install.packages("Rcpp")
document()
library(devtools)
library(roxygen2)
document()
?lcmem
install("../trajpkg")
?lcmem
install.packages("Rtools")
install("../trajpkg")
library(Rtools)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
library(devtools)
library(roxygen2)
install("trajpkg")
install("../trajpkg")
file.path(R.home("bin"), "R")
R.home
.libPaths()
install.packages("devtools")
install.packages("devtools")
devtools::install("../trajpkg")
library(devtools)
install.packages("cli")
install.packages("cli")
install.packages("cli")
devtools::create("../trajpkg")
install.packages("trajpkg", lib = "M:\Postbacs\Billy\programs\trajpkg")
install.packages("trajpkg", lib = "M:\\Postbacs\Billy\programs\trajpkg")
install.packages("trajpkg", lib = "M://Postbacs\Billy/programs/trajpkg")
install.packages("trajpkg", lib = "M://Postbacs/Billy/programs/trajpkg")
library(devtools)
library(roxygen2)
install(../trajpkg)
install("../trajpkg")
version
library(help = "tools")
getwd()
install.packages("devtools")
install.packages("roxygen2")
document()
library(devtools)
?lcmem
library(devtools)
devtools::session_info()
library(roxygen2)
?lcmem
getwd()
setwd("..")
install("trajpkg")
install.packages("devtools")
install.packages("roxygen2")
getwd()
setwd(".."
)
getwd()
library(devtools)
install.packages("pkdload")
install.packages("usethis")
install.packages("usethis")
library(devtools)
install.packages("glue")
install.packages("glue")
library(devtools)
install.packages("pkgload")
library(devtools)
install.packages("pkgload")
library(devtools)
install.packages("testthat")
install.packages("pkgload")
install.packages(c('devtools','curl'))
library(devtools)
install.packages("devtools")
install.packages("knitr")
install.packages("knitr", dependencies = TRUE)
install.packages("htmlwidgets", dependencies = TRUE)
Sys.which(("make"))
install.packages("knitr", dependencies = TRUE, type = "source")
install.packages("rlang")
install.packages("devtools")
install.packages("knitr")
install.packages("devtools")
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("roxygen")
install.packages("roxygen2")
library(devtools)
setwd("..")
getwd()
install("trajpkg")
?lcmem
??lcmem
devtools::document()
devtools::document("trajpkg")
install("trajpkg")
??lcmem
devtools::document()
devtools::document("trajpkg")
install("trajpkg")
getwd()
devtools::document()
setwd("..")
setwd("trajpkg")
devtools::install()
install.packages("lcmm")
devtools::document()
devtools::install()
trajpkg::random_can()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
??base::plot
??plot
??graphics::plot
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
install.packages("devtools")
install.packages("devtools")
devtools::install()
install.packages("devtools")
install.packages("devtools")
install.packages("devtools", type = "binary")
install.packages("devtools")
install.packages("devtools")
chooseCRANmirror()
install.packages("devtools")
install.packages('devtools', dependencies=TRUE, repos='http://cran.rstudio.com/')
options(repos='http://cran.rstudio.com/')
install.packages("devtools")
install.packages("devtools")
install.packages("gert", type = "binary")
install.packages("waldo", type = "binary")
devtools::install()
devtools::install()
install.packages("pkgload", type = "binary")
devtools::install()
install.packages("devtools")
devtools::install()
devtools::install("M:\\Postbacs\\Billy\\programs\\trajpkg")
install.packages("devtools", type = "binary")
install.packages("devtools", type = "binary")
devtools::install()
.libPaths()
install.packages("devtools", dependencies = TRUE)
devtools::install()
Sys.getenv("PATH")
install.packages("devtools", dependencies = TRUE, type = "binary")
sessionInfo()
install.packages("roxygen2")
devtools::install()
devtools::build_manual()
getwd()
devtools::build_manual(\)
devtools::build_manual(\)
devtools::build_manual(".")
devtools::build_manual(".", path = NULL)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::document()
devtools::build_manual()
devtools::document()
devtools::install()
devtools::build_manual()
devtools::check(manual = TRUE)
install.packages("pdflatex")
install.packages("pdflatex", type = "binary")
install.packages("tinytex")
install.packages("tinytex")
devtools::build_manual()
Sys.which("pdflatex")
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "C:\\Users\\muellerwf\\AppData\\Local\\MiKTeX", sep=.Platform$path.sep))
Sys.PATH
system("PATH")
Sys.which("pdflatex")
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE
)
Sys.getenv("PATH")
devtools::build_manual()
devtools::build_manual()
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
